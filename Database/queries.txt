/* Normalized Tables for storing case/ticket related tables/
SELECT  from CaseSummarization;
SELECT * from CategoryTypeDetails;
SELECT * from ServiceNameDetails;
SELECT * from CaseOwnerDetails;
SELECT * from RequestorDetails;

/* Join case/ticket related tables/
Select CaseID, Subject, CategoryTypeName, ServiceName, CaseNotes, CaseSummaryAI21
from CaseSummarization cs, CategoryTypeDetails ct, ServiceNameDetails sd where cs.CategoryTypeID=ct.CategoryTypeID and cs.ServiceNameID=sd.ServiceNameID;

/AI21 Summarise function definitation
CREATE FUNCTION `CaseSummarizeAI21`( CaseID VARCHAR(50), Subject VARCHAR(255), ServiceName VARCHAR(255), CaseNotes VARCHAR(2000),Priority INT, Feedback VARCHAR(2000) ) RETURNS varchar(5000) CHARSET utf8mb4 alias aws_sagemaker_invoke_endpoint endpoint name 'auroramlsum' 

/Summarize Case Notes in real time using AI21 Summarize Foundation Model deployed in Amazon SageMaker/
select ca.CaseID, CaseSummarizeAI21( ca.CaseID, ca.Subject , sn.ServiceName, ca.CaseNotes, ca.Priority, ca.Feedback) as 'CaseSummaryAI21' from CaseSummarization ca join ServiceNameDetails sn on ca.ServiceNameID=sn.ServiceNameID where ca.CaseID='CAS02';

/Store summarized Case Notes using AI21 Summarize Foundation Model deployed in Amazon SageMaker/
UPDATE CaseSummarization ca
INNER JOIN ServiceNameDetails sn ON ca.ServiceNameID = sn.ServiceNameID
SET ca.CaseSummaryAI21 = CaseSummaryAI21(ca.CaseID, ca.Subject, sn.ServiceName, ca.CaseNotes, ca.Priority, ca.Feedback)
WHERE ca.CaseID = 'CAS02';
